

module initialiseN
    NN : [0..100] init 0;
    NS : [0..100] init 0;
    NW : [0..100] init 0;
    NE : [0..100] init 0;
    [init] 0.4: (NN'=80) & (NS'=10) & (NW'=6) & (NE'=4) + 0.3: (NN'=60) & (NS'=10) & (NW'=16) & (NE'=14) + 0.3: (NN'=90) & (NS'=2) & (NW'=4) & (NE'=4);
endmodule

module initialiseS
    SN : [0..100] init 0;
    SS : [0..100] init 0;
    SW : [0..100] init 0;
    SE : [0..100] init 0;
    [init] 0.4: (SN'=80) & (SS'=10) & (SW'=6) & (SE'=4) + 0.1: (SN'=60) & (SS'=10) & (SW'=16) & (SE'=14) + 0.5: (SN'=90) & (SS'=2) & (SW'=4) & (SE'=4);
endmodule

module initialiseW
    WN : [0..100] init 0;
    WS : [0..100] init 0;
    WW : [0..100] init 0;
    WE : [0..100] init 0;
    [init] 0.6: (WN'=80) & (WS'=10) & (WW'=6) & (WE'=4) + 0.3: (WN'=60) & (WS'=10) & (WW'=16) & (WE'=14) + 0.1: (WN'=90) & (WS'=2) & (WW'=4) & (WE'=4);
endmodule

module initialiseE
    EN : [0..100] init 0;
    ES : [0..100] init 0;
    EW : [0..100] init 0;
    EE : [0..100] init 0;
    [init] 0.2: (EN'=80) & (ES'=10) & (EW'=6) & (EE'=4) + 0.4: (EN'=60) & (ES'=10) & (EW'=16) & (EE'=14) + 0.4: (EN'=90) & (ES'=2) & (EW'=4) & (EE'=4);
endmodule

module initialiseA
    ANOT : [0..100] init 0;
    ANW : [0..100] init 0;
    ASW : [0..100] init 0;
    ANE : [0..100] init 0;
    ASE : [0..100] init 0;
    [init] 0.4: (ANOT'=20) & (ANW'=20) & (ASW'=20) & (ANE'=20) & (ASE'=20)
         + 0.3: (ANOT'=25) & (ANW'=25) & (ASW'=25) & (ANE'=0) & (ASE'=25)
         + 0.3: (ANOT'=25) & (ANW'=25) & (ASW'=25) & (ANE'=25) & (ASE'=0);
endmodule


module arbiter
    phase : [0..2] init 0;
    [init] phase = 0 -> (phase'=1);
    [steer] phase = 1 -> (phase'=2);
    [lost] phase = 1 -> (phase'=1);
    [extern] phase = 2 -> (phase'=1);

endmodule


const int MAXX = 6;
const int MAXY = 6;
formula dead = (x = 0 | y = 0 | x = MAXX | y = MAXY);

module strategy
    act : [0..4] init 0;

    [lost] dead -> true;


    [steer] act=0 & x = 1 & y = 1 -> (act' = M11);
    [steer] act=0 & x = 1 & y = 2 -> (act' = M12);
    [steer] act=0 & x = 1 & y = 3 -> (act' = M13);
    [steer] act=0 & x = 1 & y = 4 -> (act' = M14);
    [steer] act=0 & x = 1 & y = 5 -> (act' = M15);

    [steer] act=0 & x = 2 & y = 1 -> (act' = M21);
    [steer] act=0 & x = 2 & y = 2 -> (act' = M22);
    [steer] act=0 & x = 2 & y = 3 -> (act' = M23);
    [steer] act=0 & x = 2 & y = 4 -> (act' = M24);
    [steer] act=0 & x = 2 & y = 5 -> (act' = M25);

    [steer] act=0 & x = 3 & y = 1 -> (act' = M31);
    [steer] act=0 & x = 3 & y = 2 -> (act' = M32);
    [steer] act=0 & x = 3 & y = 3 -> (act' = M33);
    [steer] act=0 & x = 3 & y = 4 -> (act' = M34);
    [steer] act=0 & x = 3 & y = 5 -> (act' = M35);

    [steer] act=0 & x = 4 & y = 1 -> (act' = M41);
    [steer] act=0 & x = 4 & y = 2 -> (act' = M42);
    [steer] act=0 & x = 4 & y = 3 -> (act' = M43);
    [steer] act=0 & x = 4 & y = 4 -> (act' = M44);
    [steer] act=0 & x = 4 & y = 5 -> (act' = M45);

    [steer] act=0 & x = 5 & y = 1 -> (act' = M51);
    [steer] act=0 & x = 5 & y = 2 -> (act' = M52);
    [steer] act=0 & x = 5 & y = 3 -> (act' = M53);
    [steer] act=0 & x = 5 & y = 4 -> (act' = M54);
    [steer] act=0 & x = 5 & y = 5 -> (act' = M55);

    [north] act = 1 -> (act'=0);
    [south] act = 2 -> (act'=0);
    [west] act = 3 -> (act'=0);
    [east] act = 4 -> (act'=0);
endmodule

module controller
    x : [0..MAXX] init 3
    y : [0..MAXY] init 3

    [north] true -> NN/100: (x'=max(0, x-1)) + NS/100: (x'=min(MAXX,x+1)) + NW/100: (y'=max(0,y-1)) + NE/100: (y'=min(MAXY,y+1));
    [south] true -> SN/100: (x'=max(0, x-1)) + SS/100: (x'=min(MAXX,x+1)) + SW/100: (y'=max(0,y-1)) + SE/100: (y'=min(MAXY,y+1));
    [west] true -> WN/100: (x'=max(0, x-1)) + WS/100: (x'=min(MAXX,x+1)) + WW/100: (y'=max(0,y-1)) + WE/100: (y'=min(MAXY,y+1));
    [east] true -> EN/100: (x'=max(0, x-1)) + ES/100: (x'=min(MAXX,x+1)) + EW/100: (y'=max(0,y-1)) + EE/100: (y'=min(MAXY,y+1));

    [extern] true -> ANOT/100: (x'=x) & (y'=y)
                   + ANW/100: (x'=max(0, x-1)) & (y'=max(0,y-1))
                   + ASW/100: (x'=min(MAXX, x+1)) & (y'=max(0,y-1))
                   + ANE/100: (x'=max(0, x-1)) & (y'=min(MAXY,y+1))
                   + ASW/100: (x'=min(MAXX, x+1)) & (y'=min(MAXY,y+1));

endmodule

rewards
    [steer] true : 1
endrewards

